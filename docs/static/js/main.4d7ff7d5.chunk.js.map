{"version":3,"sources":["images/avatar2.jpg","routes/Curriculum.tsx","routes/Home.tsx","routes/Contact.tsx","routes/NoMatch.tsx","App.tsx","theme.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","drawer","theme","breakpoints","up","width","transition","transitions","create","easing","sharp","duration","enteringScreen","down","leavingScreen","overflowX","spacing","useStyles","makeStyles","createStyles","root","display","appBar","zIndex","title","marginLeft","chips","justifyContent","alignItems","flexGrow","flexWrap","margin","flexShrink","drawerLink","color","textDecoration","drawerPaper","drawerContainer","overflow","content","padding","App","classes","useMemo","icon","style","text","link","routes","path","page","Home","Curriculum","Contact","separator","className","AppBar","position","Toolbar","Avatar","src","avatar","Typography","variant","noWrap","Hidden","mdDown","map","index","Chip","key","label","onClick","window","location","href","handleChipClick","Drawer","paper","List","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","exact","NoMatch","createMuiTheme","palette","main","secondary","error","red","A400","background","default","Boolean","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4d7ff7d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar2.4344fd21.jpg\";","import React from 'react'\n\nexport default function ({}) {\n  return <h1>curriculum</h1>\n}\n","import React from 'react'\n\nexport default function ({}) {\n  return <h1>Home</h1>\n}\n","import React from 'react'\n\nexport default function ({}) {\n  return <h1>contact</h1>\n}\n","import React from 'react'\n\nexport default function ({}) {\n  return <h1>404</h1>\n}\n","import React, { Fragment, useState, useMemo } from 'react'\nimport clsx from 'clsx'\nimport { BrowserRouter, Route, Switch, Link, Redirect } from 'react-router-dom'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport {\n  Avatar,\n  AppBar,\n  Toolbar,\n  Drawer,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Chip,\n  Hidden,\n} from '@material-ui/core'\n\nimport Curriculum from ':routes/Curriculum'\nimport Home from ':routes/Home'\nimport Contact from ':routes/Contact'\nimport NoMatch from ':routes/NoMatch'\n\nimport HomeIcon from '@material-ui/icons/Home'\nimport CurriculumIcon from '@material-ui/icons/InsertDriveFile'\nimport ContactIcon from '@material-ui/icons/AlternateEmail'\n\nimport avatar from './images/avatar2.jpg'\nimport FacebookIcon from '@material-ui/icons/Facebook'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport InstagramIcon from '@material-ui/icons/Instagram'\n\n// import GitHub, { User } from 'github-api'\n\nconst drawer = (theme: Theme) => {\n  return {\n    [theme.breakpoints.up('sm')]: {\n      width: 240,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    [theme.breakpoints.down('sm')]: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n  }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    title: {\n      marginLeft: '0.5em',\n    },\n    chips: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      flexGrow: 1,\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.5),\n      },\n    },\n    drawer: {\n      flexShrink: 0,\n      ...drawer(theme),\n    },\n    drawerLink: {\n      color: 'inherit',\n      textDecoration: 'none',\n    },\n    drawerPaper: {\n      ...drawer(theme),\n    },\n    drawerContainer: {\n      overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n)\n\nexport default function App() {\n  const classes = useStyles()\n\n  const chips = useMemo(() => {\n    return [\n      {\n        icon: <GitHubIcon style={{ color: '#24292e' }} />,\n        text: 'GitHub',\n        link: 'https://github.com/GiovanniCardamone',\n      },\n      {\n        icon: <LinkedInIcon style={{ color: '#0e76a8' }} />,\n        text: 'LinkedIn',\n        link: 'https://www.linkedin.com/in/giovanni-cardamone-41306973/',\n      },\n      {\n        icon: <FacebookIcon style={{ color: '#3b5998' }} />,\n        text: 'Facebook',\n        link: 'https://www.facebook.com/G.Cardamone2',\n      },\n      {\n        icon: <InstagramIcon style={{ color: '#cd486b' }} />,\n        text: 'Instagram',\n        link: 'https://instagram.com/giovannicardamone/',\n      },\n    ]\n  }, [])\n\n  const routes = useMemo(() => {\n    return [\n      {\n        icon: <HomeIcon />,\n        text: 'Home',\n        path: '/home',\n        page: <Home />,\n      },\n      {\n        icon: <CurriculumIcon />,\n        text: 'Curriculum',\n        path: '/curriculum',\n        page: <Curriculum />,\n      },\n      {\n        icon: <ContactIcon />,\n        text: 'Contatti',\n        path: '/contact',\n        page: <Contact />,\n        separator: true,\n      },\n    ]\n  }, [])\n\n  const handleChipClick = (link: string) => {\n    window.location.href = link\n  }\n\n  return (\n    <BrowserRouter>\n      <div className={classes.root}>\n        <AppBar position='fixed' className={classes.appBar}>\n          <Toolbar>\n            <Avatar src={avatar} />\n            <Typography variant='h6' noWrap className={classes.title}>\n              Giovanni Cardamone\n            </Typography>\n            <Hidden mdDown>\n              <div className={classes.chips}>\n                {chips.map(({ icon, text, link }, index) => (\n                  <Chip key={index} icon={icon} label={text} onClick={() => handleChipClick(link)} />\n                ))}\n              </div>\n            </Hidden>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant='permanent'\n          className={classes.drawer}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Toolbar />\n          <div className={classes.drawerContainer}>\n            <List>\n              {routes.map(({ icon, text, path, separator }, index) => (\n                <Fragment>\n                  <Link key={path} to={path} className={classes.drawerLink}>\n                    <ListItem button>\n                      <ListItemIcon>{icon}</ListItemIcon>\n                      <ListItemText primary={text} />\n                    </ListItem>\n                  </Link>\n                  {separator ? <Divider /> : null}\n                </Fragment>\n              ))}\n            </List>\n          </div>\n        </Drawer>\n        <main className={classes.content}>\n          <Toolbar />\n          <Switch>\n            <Route exact path='/'>\n              <Redirect to='/home' />\n            </Route>\n\n            {routes.map(({ path, page }, index) => (\n              <Route key={index} path={path}>\n                {page}\n              </Route>\n            ))}\n\n            <Route path='*'>\n              <NoMatch />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </BrowserRouter>\n  )\n}\n","import { red } from '@material-ui/core/colors'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#424242',\n    },\n    secondary: {\n      main: '#00838f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n})\n\nexport default theme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport theme from './theme'\n// import store from './store'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport * as serviceWorker from './serviceWorker'\n// import { Provider } from 'react-redux'\nimport { ThemeProvider } from '@material-ui/core'\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}